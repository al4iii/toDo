{"version":3,"sources":["DataList.js","helper.js","Form.js","ToDoList.js","App.js","index.js","ToDoList.module.css"],"names":["DataContext","React","createContext","DataList","props","useState","data","setData","Provider","value","children","getTime","now","Date","year","String","getFullYear","mouth","getMonth","date","getDate","clock","getHours","minutes","getMinutes","sec","getSeconds","Form","useContext","useForm","register","handleSubmit","reset","onSubmit","input","id","nanoid","name","toggle","chenge","type","autoComplete","style","margin","ToDoList","setValue","onStatusChenge","e","currentTarget","className","onDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","droppableId","provided","droppableProps","ref","innerRef","map","item","draggableId","toString","task","checkbox","draggableProps","dragHandleProps","key","list","autoFocus","onChange","placeholder","onClick","i","Object","assign","button","h3","filter","x","color","App","rootElement","document","getElementById","ReactDOM","render","module","exports"],"mappings":"mNAGaA,EAAcC,IAAMC,cAAc,IAElCC,EAAW,SAACC,GAAW,IAAD,EACTC,mBAAS,IADA,mBAC1BC,EAD0B,KACpBC,EADoB,KAGjC,OACE,cAACP,EAAYQ,SAAb,CAAsBC,MAAO,CAACH,EAAMC,GAApC,SACGH,EAAMM,YCVAC,EAAU,WACrB,IAAMC,EAAM,IAAIC,KACVC,EAAOC,OAAOH,EAAII,eAClBC,EAAQF,OAAOH,EAAIM,WAAa,EAAI,GAArB,WAA8BN,EAAIM,WAAa,GAAMN,EAAIM,WAAa,GACrFC,EAAOJ,OAAOH,EAAIQ,UAAY,GAAhB,WAAyBR,EAAIQ,WAAcR,EAAIQ,WAC7DC,EAAQN,OAAOH,EAAIU,WAAa,GAAjB,WAA0BV,EAAIU,YAAeV,EAAIU,YAChEC,EAAUR,OAAOH,EAAIY,aAAe,GAAnB,WAA4BZ,EAAIY,cAAiBZ,EAAIY,cACtEC,EAAMV,OAAOH,EAAIc,aAAe,GAAnB,WAA4Bd,EAAIc,cAAiBd,EAAIc,cACxE,MAAM,GAAN,OAAUL,EAAV,YAAmBE,EAAnB,YAA8BE,EAA9B,YAAqCN,EAArC,YAA6CF,EAA7C,YAAsDH,EAAtD,MCyBaa,EA3BF,WAAO,IAAD,EACOC,qBAAW5B,GADlB,mBACVM,EADU,KACJC,EADI,OAEyBsB,cAAlCC,EAFS,EAETA,SAAUC,EAFD,EAECA,aAAcC,EAFf,EAEeA,MAOhC,OACE,8BACE,uBAAMC,SAAUF,GAPH,SAACG,GAChB3B,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CAAE6B,GAAIC,cAAUC,KAAMH,EAAMG,KAAMlB,KAAMR,IAAW2B,QAAQ,EAAOC,QAAQ,MAC5FP,OAKE,UACE,0CAEE,mCACEQ,KAAK,OACLC,aAAa,MACbC,MAAO,CAAEC,OAAQ,OACbb,EAAS,aAGjB,uBAAOU,KAAK,SAAS/B,MAAM,c,wBCmFpBmC,EAvGE,WAAO,IAAD,EACGhB,qBAAW5B,GADd,mBACdM,EADc,KACRC,EADQ,OAEKF,mBAAS,IAFd,mBAEdI,EAFc,KAEPoC,EAFO,KAIfC,EAAiB,SAACC,GAAD,OAAOF,EAASE,EAAEC,cAAcvC,QAoBvD,OACE,qBAAKwC,UAAU,MAAf,SACE,cAAC,IAAD,CAAiBC,UAVH,SAACC,GACjB,GAAKA,EAAOC,YAAZ,CACA,IAAMC,EAAQC,MAAMC,KAAKjD,GAFG,EAGJ+C,EAAMG,OAAOL,EAAOM,OAAOC,MAAO,GAAnDC,EAHqB,oBAI5BN,EAAMG,OAAOL,EAAOC,YAAYM,MAAO,EAAGC,GAC1CpD,EAAQ8C,KAKN,SACE,cAAC,IAAD,CAAWO,YAAY,SAAvB,SACG,SAACC,GAAD,OACC,+CAAQA,EAASC,gBAAjB,IAAiCC,IAAKF,EAASG,SAA/C,UACG1D,EAAK2D,KAAI,SAACC,EAAMR,GAAP,OACR,cAAC,IAAD,CAEES,YAAaD,EAAK/B,GAAGiC,WACrBV,MAAOA,EAHT,SAKG,SAACG,GAAD,OACC,sBAAKZ,UAAWP,IAAM2B,KAAtB,UACE,uBACE7B,KAAK,WACL/B,MAAM,MACNwC,UAAWP,IAAM4B,WAEnB,oEACMT,EAASU,gBACTV,EAASW,iBAFf,IAGET,IAAKF,EAASG,SACdS,IAAKP,EAAK/B,GACVc,UAAWP,IAAMgC,OAEhBhB,EAAQ,EAPX,IAOe,IACZQ,EAAK5B,OACJ,gCACE,uBACEW,UAAWP,IAAMR,MACjByC,WAAW,EACXC,SAAU9B,EACV+B,YAAaX,EAAK7B,OAEpB,wBACEyC,QAAS,kBApDnB3C,EAoDkC+B,EAAK/B,QAnDvD5B,EAAQD,EAAK2D,KAAI,SAACc,GAAD,OAAOA,EAAE5C,KAAOA,EAAK6C,OAAOC,OAAO,GAAIF,EAAG,CAAE1C,KAAM5B,EAAO6B,QAAQ,EAAOnB,KAAMR,IAAW4B,QAAQ,IAASwC,MAD5G,IAAC5C,GAqDUc,UAAWP,IAAMwC,OAFnB,mBAQF,oBAAIjC,UAAWP,IAAMyC,GAArB,SAA0BjB,EAAK7B,OAEjC,oBAAIY,UAAWP,IAAMvB,KAArB,SAA4B+C,EAAK/C,OACjC,+BACE,wBACE8B,UAAWP,IAAMwC,OACjBJ,QAAS,kBAnEf3C,EAmEgC+B,EAAK/B,GAnE9B5B,EAAQD,EAAK8E,QAAO,SAACC,GAAD,OAAOA,EAAElD,KAAOA,MAA5C,IAACA,GAiEI,sBAOF,gCACI+B,EAAK5B,QACL,wBACEW,UAAWP,IAAMwC,OACjBJ,QAAS,kBAtErB3C,EAsEkC+B,EAAK/B,QArErD5B,EAAQD,EAAK2D,KAAI,SAACc,GAAD,OAAOA,EAAE5C,KAAOA,EAAK6C,OAAOC,OAAO,GAAIF,EAAG,CAAEzC,QAAQ,IAAUyC,MADlE,IAAC5C,GAoEU,oBAQH+B,EAAK3B,QAAU,sBAAMG,MAAO,CAAE4C,MAAO,OAAtB,6CAxDjBpB,EAAK/B,OA8Db0B,EAASgB,wBCrFTU,EAXH,WACV,OACE,qBAAKtC,UAAU,MAAf,SACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,UCPFuC,EAAcC,SAASC,eAAe,QAE5CC,IAASC,OAAO,cAAC,EAAD,IAASJ,I,kBCJzBK,EAAOC,QAAU,CAAC,OAAS,yBAAyB,KAAO,uBAAuB,KAAO,uBAAuB,GAAK,qBAAqB,KAAO,0B","file":"static/js/main.754b13fc.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nexport const DataContext = React.createContext([]);\n\nexport const DataList = (props) => {\n  const [data, setData] = useState([]);\n\n  return (\n    <DataContext.Provider value={[data, setData]}>\n      {props.children}\n    </DataContext.Provider>\n  );\n};\n","export const getTime = () => {\r\n  const now = new Date();\r\n  const year = String(now.getFullYear());\r\n  const mouth = String(now.getMonth() + 1 < 10 ? `0${now.getMonth() + 1}` : now.getMonth() + 1);\r\n  const date = String(now.getDate() < 10 ? `0${now.getDate()}` : now.getDate());\r\n  const clock = String(now.getHours() < 10 ? `0${now.getHours()}` : now.getHours());\r\n  const minutes = String(now.getMinutes() < 10 ? `0${now.getMinutes()}` : now.getMinutes());  \r\n  const sec = String(now.getSeconds() < 10 ? `0${now.getSeconds()}` : now.getSeconds());  \r\n  return `${clock}:${minutes}:${sec} ${date}/${mouth}/${year} `\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { DataContext } from \"./DataList\";\r\nimport { getTime } from \"./helper\";\r\n\r\nconst Form = () => {\r\n  const [data, setData] = useContext(DataContext);\r\n  const { register, handleSubmit, reset } = useForm();  \r\n\r\n  const onSubmit = (input) => {    \r\n    setData([...data, { id: nanoid(), name: input.name, date: getTime(), toggle: false, chenge: false }]);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label>\r\n          Task:\r\n          <input\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            style={{ margin: \"1%\" }}\r\n            {...register(\"name\")}\r\n          />\r\n        </label>\r\n        <input type=\"submit\" value=\"Add\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { DataContext } from \"./DataList\";\r\nimport { getTime } from \"./helper\";\r\nimport style from \"./ToDoList.module.css\";\r\n\r\nconst ToDoList = () => {\r\n  const [data, setData] = useContext(DataContext);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const onStatusChenge = (e) => setValue(e.currentTarget.value);\r\n\r\n  const deleteItem = (id) => setData(data.filter((x) => x.id !== id));\r\n\r\n  const editItem = (id) => {    \r\n    setData(data.map((i) => i.id === id ? Object.assign({}, i, { name: value, toggle: false, date: getTime(), chenge: true}) : i));\r\n  };\r\n\r\n  const onEdit = (id) => {\r\n    setData(data.map((i) => i.id === id ? Object.assign({}, i, { toggle: true }) : i ))\r\n  };\r\n\r\n  const handleEnd = (result) => {\r\n    if (!result.destination) return; \r\n    const items = Array.from(data);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n    setData(items);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <DragDropContext onDragEnd={handleEnd}>\r\n        <Droppable droppableId=\"to-dos\">\r\n          {(provided) => (\r\n            <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n              {data.map((item, index) => (\r\n                <Draggable\r\n                  key={item.id}\r\n                  draggableId={item.id.toString()}\r\n                  index={index}\r\n                >\r\n                  {(provided) => (\r\n                    <div className={style.task}>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        value=\"Add\"\r\n                        className={style.checkbox}\r\n                      />\r\n                      <li\r\n                        {...provided.draggableProps}                       \r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}\r\n                        key={item.id}\r\n                        className={style.list}\r\n                      >\r\n                        {index + 1}.{\" \"}\r\n                        {item.toggle ? (\r\n                          <div>\r\n                            <input\r\n                              className={style.input}\r\n                              autoFocus={true}\r\n                              onChange={onStatusChenge}\r\n                              placeholder={item.name}\r\n                            />\r\n                            <button\r\n                              onClick={() => editItem(item.id)}\r\n                              className={style.button}\r\n                            >\r\n                              ok\r\n                            </button>\r\n                          </div>\r\n                        ) : (\r\n                          <h3 className={style.h3}>{item.name}</h3>\r\n                        )}\r\n                        <h3 className={style.date}>{item.date}</h3>\r\n                        <span>\r\n                          <button\r\n                            className={style.button}\r\n                            onClick={() => deleteItem(item.id)}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </span>\r\n                        <span>\r\n                          {!item.toggle && (\r\n                            <button\r\n                              className={style.button}\r\n                              onClick={() => onEdit(item.id)}\r\n                            >\r\n                              edit\r\n                            </button>\r\n                          )}\r\n                        </span>\r\n                        {item.chenge && <span style={{ color: \"red\" }}>the task has been changed</span>}\r\n                      </li>\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </ul>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoList;","import \"./styles.css\";\r\nimport Form from \"./Form\";\r\nimport ToDoList from \"./ToDoList\";\r\nimport { DataList } from \"./DataList\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <DataList>\r\n        <Form />\r\n        <ToDoList />\r\n      </DataList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nReactDOM.render(<App />, rootElement);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete\":\"ToDoList_delete__xyid2\",\"task\":\"ToDoList_task__LjP8p\",\"list\":\"ToDoList_list__2xgkN\",\"h3\":\"ToDoList_h3__2EXmB\",\"date\":\"ToDoList_date__eGlqS\"};"],"sourceRoot":""}